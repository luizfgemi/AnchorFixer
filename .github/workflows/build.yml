name: Build and Release AnchorFixer

on:
  push:
    branches:
      - main
  workflow_dispatch:
  release:
    types: [published]

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.1

      - name: Check required KSP dependencies
        run: |
          $required = @(
            "Dependencies/KSP/UnityEngine.dll",
            "Dependencies/KSP/UnityEngine.CoreModule.dll",
            "Dependencies/KSP/UnityEngine.UI.dll",
            "Dependencies/KSP/Assembly-CSharp.dll"
          )
          foreach ($file in $required) {
            if (-not (Test-Path $file)) {
              Write-Error "Missing required dependency: $file"
              exit 1
            }
          }
          Write-Host "âœ… All dependencies found!"
          
      - name: Build AnchorFixer DLL
        run: |
          msbuild AnchorFixer.csproj /p:Configuration=Release

      - name: Prepare mod package
        run: |
          mkdir dist\GameData\AnchorFixer\Plugins
          copy .\bin\AnchorFixer.dll dist\GameData\AnchorFixer\Plugins\
          copy .\AnchorFixer.version dist\GameData\AnchorFixer\

      - name: Create release zip (excluding Dependencies)
        run: |
          cd dist
          Compress-Archive -Path GameData -DestinationPath AnchorFixer-${{ github.ref_name }}.zip

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: AnchorFixer-${{ github.ref_name }}
          path: dist/AnchorFixer-${{ github.ref_name }}.zip


  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'release'

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: AnchorFixer-${{ github.ref_name }}

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: AnchorFixer-${{ github.ref_name }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
